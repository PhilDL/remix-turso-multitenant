name: 🚀 Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3.0.0
        with:
          version: 8

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📥 Download deps
        run: pnpm install --ignore-scripts

      - name: 🔬 Lint
        run: pnpm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3.0.0
        with:
          version: 8

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📥 Download deps
        run: pnpm install

      - name: 🔎 Type check
        run: pnpm run typecheck

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-22.04
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3.0.0
        with:
          version: 8

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📥 Download deps
        run: pnpm install

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⚡ Run vitest
        run: pnpm run test -- --coverage

  # playwright:
  #   name: 🎭 Playwright
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 60
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4

  #     - name: 🏄 Copy test env vars
  #       run: cp .env.example .env

  #     - uses: pnpm/action-setup@v3.0.0
  #       with:
  #         version: 8

  #     - name: ⎔ Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #         cache: "pnpm"

  #     - name: 📥 Download deps
  #       run: pnpm install

  #     - name: 🏗 Build
  #       run: pnpm run build

  #     - name: Install Playwright Browsers and run tests
  #       run: pnpm test:e2e:ci

  #     - name: 📊 Upload report
  #       uses: actions/upload-artifact@v3
  #       # only upload report if not running local ACT
  #       if: ${{ !env.ACT }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-22.04
    needs: [lint, typecheck, vitest]
    # only build/deploy main branch on pushes
    if:
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run:
          flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
          --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
